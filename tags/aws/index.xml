<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on David Winterbottom</title>
    <link>https://codeinthehole.com/tags/aws/</link>
    <description>Recent content in AWS on David Winterbottom</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Aug 2017 14:08:08 +0100</lastBuildDate>
    <atom:link href="https://codeinthehole.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using pgbadger with AWS RDS</title>
      <link>https://codeinthehole.com/tips/using-pgbadger-with-aws-rds/</link>
      <pubDate>Tue, 29 Aug 2017 14:08:08 +0100</pubDate>
      <guid>https://codeinthehole.com/tips/using-pgbadger-with-aws-rds/</guid>
      <description>There&amp;rsquo;s two non-obvious things to know when starting to use pgbadger with AWS RDS.&#xA;First, set:&#xA;log_statement = None Don&amp;rsquo;t set this to all as the AWS docs suggest.&#xA;Further, don&amp;rsquo;t waste your time trying to add a DB parameter to set log_line_prefix to pgbadger&amp;rsquo;s recommended value: it&amp;rsquo;s not possible1. Instead tell pgbadger about the log format that RDS insists on:&#xA;pgbadger -f stderr -p &amp;#39;%t:%r:%u@%d:[%p]:&amp;#39; postgres.log Hope that saves you some time.</description>
    </item>
    <item>
      <title>An SSH tip for modern AWS patrons</title>
      <link>https://codeinthehole.com/tips/an-ssh-tip-for-modern-aws-patrons/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      <guid>https://codeinthehole.com/tips/an-ssh-tip-for-modern-aws-patrons/</guid>
      <description>Cloud computing and immutable infrastructure deployments have changed the way I use SSH. I miss the days when I could run:&#xA;ssh app1-prod to jump onto a machine and investigate an issue. This would work as, back in the days of yore, your web servers didn&amp;rsquo;t change IP address several times a week so I could create a helpful alias in ~/.ssh/config:&#xA;Host app1-prod User example_user HostName 74.207.251.29 This circumvented the labour-intensive act of typing in the remote username and IP address when SSHing around town.</description>
    </item>
  </channel>
</rss>
