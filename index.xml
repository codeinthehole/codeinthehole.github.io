<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Winterbottom</title>
    <link>http://codeinthehole.com/index.xml</link>
    <description>Recent content on David Winterbottom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jun 2017 11:26:39 +0100</lastBuildDate>
    <atom:link href="http://codeinthehole.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Your codebase is your house</title>
      <link>http://codeinthehole.com/tips/your-codebase-is-your-%F0%9F%8F%A0/</link>
      <pubDate>Fri, 30 Jun 2017 11:26:39 +0100</pubDate>
      
      <guid>http://codeinthehole.com/tips/your-codebase-is-your-%F0%9F%8F%A0/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;‚ÄúRemember, code is your house, and you have to live in it.‚Äù - Michael Feathers üè†&lt;/p&gt;&amp;mdash; Programming Wisdom (@CodeWisdom) &lt;a href=&#34;https://twitter.com/CodeWisdom/status/854726796172034049&#34;&gt;April 19, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is the best metaphor I know for promoting or defending software quality.&lt;/p&gt;

&lt;p&gt;We do live in our codebases: shoddy software engineering has direct,
easily-visualised analogues from construction and house maintenance.&lt;/p&gt;

&lt;p&gt;For instance, I&amp;rsquo;m sure you&amp;rsquo;ve seen these pull requests before&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://codeinthehole.com/images/bricks.jpg&#34; class=&#34;photo&#34; /&gt;
&lt;img src=&#34;http://codeinthehole.com/images/fan.jpg&#34; class=&#34;photo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, the episode &lt;a href=&#34;https://en.wikipedia.org/wiki/Hurricane_Neddy&#34;&gt;&amp;ldquo;Hurrican Neddy&amp;rdquo;&lt;/a&gt; from season 8
of The Simpsons is a parable of a failed software project, where feature delivery is prioritised
at the expense of maintainability.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://codeinthehole.com/images/hurricane-neddy1.jpg&#34; class=&#34;photo&#34; /&gt;
&lt;img src=&#34;http://codeinthehole.com/images/hurricane-neddy2.png&#34; class=&#34;photo&#34; /&gt;
&lt;img src=&#34;http://codeinthehole.com/images/hurricane-neddy3.jpg&#34; class=&#34;photo&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Homer: Your beautiful kitchen, Ned, just as you remember it.&lt;/p&gt;

&lt;p&gt;Ned: Was that, uh, was that toilet always next to the refrigerator?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I often think of the toilet in the kitchen often when reviewing code, when an
issue is addressed by shoving code into a place where it really doesn&amp;rsquo;t belong.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a useful metaphor - it will serve you well in the struggle to keep a large
codebase maintainable&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://codeinthehole.com/images/this-is-fine.png&#34; style=&#34;width:100%&#34;/&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;p&gt;I first saw the fan image in a &lt;a href=&#34;https://twitter.com/isoiphone/status/824771226585296896&#34;&gt;tweet by @isoiphone&lt;/a&gt;.
  I can&amp;rsquo;t find the tweet I saw the bricks image in - please let me know if you
  know it.&lt;/p&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Anthropomorphic dog image from a &lt;a href=&#34;https://en.wikipedia.org/wiki/Gunshow_(webcomic)#.22This_is_Fine.22&#34;&gt;&lt;em&gt;Gunshow&lt;/em&gt; strip called &amp;ldquo;On Fire&amp;rdquo;&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Git tips for working with pull requests</title>
      <link>http://codeinthehole.com/tips/open-github-pull-request-command/</link>
      <pubDate>Tue, 06 Jun 2017 21:30:36 +0100</pubDate>
      
      <guid>http://codeinthehole.com/tips/open-github-pull-request-command/</guid>
      <description>&lt;p&gt;I spend at least 50% of each day reviewing, amended (and occasionally merging) pull requests, adding
both commits and comments. As such I often want to quickly jump from a terminal window
to the pull request detail page to check previous comments or add new.&lt;/p&gt;

&lt;p&gt;Even with the excellent &lt;a href=&#34;https://hub.github.com/&#34;&gt;hub&lt;/a&gt; git wrapper, there&amp;rsquo;s no easy way to do this. I can
jump to the pull request &lt;em&gt;list&lt;/em&gt; page with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git pulls
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;pulls&lt;/code&gt; is aliased in &lt;code&gt;~/.gitconfig&lt;/code&gt; as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;pulls&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;!hub browse -- pulls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but there&amp;rsquo;s no easy way to jump to the pull request &lt;em&gt;detail&lt;/em&gt; page in one
command&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;So we use a bash script that makes a HTTP call to the Github API and
parses the response with &lt;code&gt;jq&lt;/code&gt;. Here&amp;rsquo;s the source to &lt;code&gt;open-github-pr-page.sh&lt;/code&gt;
which just needs to be somewhere on your path&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# Open the Github pull request detail page for the current branch &lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# Requires:&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# - A GITHUB_AUTH_TOKEN env var&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# - httpie and jq.&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;GITHUB_ORG&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;git config --local remote.origin.url &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; cut -d: -f2 &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; cut -d/ -f1&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;GITHUB_REPO&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;git config --local remote.origin.url &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; cut -d/ -f2 &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; cut -d. -f1&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;BRANCH&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;git rev-parse --abbrev-ref HEAD&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;

fetch_pr_detail_url&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;{&lt;/span&gt;
    http https://api.github.com/repos/&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_ORG&lt;/span&gt;/&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_REPO&lt;/span&gt;/pulls &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_ORG&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$BRANCH&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        Authorization:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;token &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_AUTH_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq -r &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.[].html_url&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;}&lt;/span&gt;

main&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_AUTH_TOKEN&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;A GITHUB_AUTH_TOKEN env var is required&amp;quot;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;GITHUB_PULL_URL&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;fetch_pr_detail_url&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_PULL_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;No pull request found from branch &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$BRANCH&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt;
        open &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$GITHUB_PULL_URL&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;}&lt;/span&gt;

main
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For this to work, you need to create a personal API token and export it as an
&lt;code&gt;GITHUB_AUTH_TOKEN&lt;/code&gt; env var in your &lt;code&gt;~/.bashrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alias this to something memorable, such as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;openpr&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;!f() { open-github-pr-page.sh; }; f&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I would use &lt;code&gt;git pr&lt;/code&gt; but I&amp;rsquo;ve already got that aliased to &lt;em&gt;create&lt;/em&gt; a new pull
request:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;pr&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;!git publish &amp;amp;&amp;amp; hub pull-request&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;publish&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;!git push -u origin $(git branchname)&lt;/span&gt;
&lt;span style=&#34;color: #a6e22e&#34;&gt;branchname&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;!git rev-parse --abbrev-ref HEAD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Works a treat.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;p&gt;Although you can get there with a command &lt;em&gt;and&lt;/em&gt; a click using the hub
command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git compare
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which opens a page with a link to the pull request detail page, if one exists.&lt;/p&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;I use &lt;code&gt;~/Dropbox/bin/&lt;/code&gt; for this kind of thing.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Converting JSON into CSV data for Google Sheets</title>
      <link>http://codeinthehole.com/tips/json-to-google-sheets/</link>
      <pubDate>Tue, 16 May 2017 21:52:21 +0100</pubDate>
      
      <guid>http://codeinthehole.com/tips/json-to-google-sheets/</guid>
      <description>&lt;p&gt;Like many people, I use Google Sheets to quickly create and share tabular data. As well as
&lt;a href=&#34;http://codeinthehole.com/tips/copying-postgres-output-into-a-spreadsheet/&#34;&gt;creating spreadsheets by pasting results generated in &lt;code&gt;psql&lt;/code&gt;&lt;/a&gt;,
I often create reports from JSON files using
&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;JQ&lt;/a&gt;. This post is a note-to-self on how to do
this.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a command to create a tab-separated report from a JSON events file exported from
Loggly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cat loggly_events.json &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\ &lt;/span&gt;
    jq -r &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.events[].event.json | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;           select(.params | has(&amp;quot;payment_day&amp;quot;)) | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;           [.timestamp, .account, .params.payment_day] | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;           @tsv&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; clipboard
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;-r&lt;/code&gt; option instructs JQ to output raw strings, not quoted JSON strings.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;@tsv&lt;/code&gt; is a JQ format string for &lt;a href=&#34;https://stedolan.github.io/jq/manual/#Formatstringsandescaping&#34;&gt;outputting tab-separated values&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The &lt;code&gt;clipboard&lt;/code&gt; command is an alias for &lt;code&gt;pbcopy&lt;/code&gt;, the system clipboard on
OS-X.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Podcast.__init__ on Oscar</title>
      <link>http://codeinthehole.com/news/podcast-init/</link>
      <pubDate>Mon, 10 Apr 2017 23:00:20 +0100</pubDate>
      
      <guid>http://codeinthehole.com/news/podcast-init/</guid>
      <description>&lt;p&gt;I was interviewed, along with &lt;a href=&#34;https://www.mvantellingen.nl/&#34;&gt;Michael van Tellingen&lt;/a&gt;, on the
&amp;ldquo;Podcast.__init__&amp;rdquo; Python podcast to talk about Oscar.&lt;/p&gt;

&lt;script class=&#34;podigee-podcast-player&#34; src=&#34;//cdn.podigee.com/podcast-player/javascripts/podigee-podcast-player.js&#34; data-configuration=&#34;https://www.podcastinit.com?podigee_player=288&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Reorganising a Consul key-value store</title>
      <link>http://codeinthehole.com/tips/migrate-consul-key-value-store/</link>
      <pubDate>Mon, 27 Mar 2017 15:25:05 +0100</pubDate>
      
      <guid>http://codeinthehole.com/tips/migrate-consul-key-value-store/</guid>
      <description>&lt;p&gt;If your Consul key-value store is structured as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;/
    A/
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;X&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;Y&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;
    C 
    D
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but you now realise you should have namespaced everything within &lt;code&gt;WEBSERVER/&lt;/code&gt; (or
something like that):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;/
    WEBSERVER/
        A/
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;X&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;Y&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;
        C
        D
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then this Bash script will help you migrate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;set&lt;/span&gt; -e  &lt;span style=&#34;color: #75715e&#34;&gt;# Exit on error&lt;/span&gt;

&lt;span style=&#34;color: #75715e&#34;&gt;# Emit &amp;quot;key value&amp;quot; lines for all keys in Consul&amp;#39;s KV store&lt;/span&gt;
keys_and_values&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #75715e&#34;&gt;# Recursively fetch all values from Consul but exclude:&lt;/span&gt;
    &lt;span style=&#34;color: #75715e&#34;&gt;# (a) those that end in / (as these are folders)&lt;/span&gt;
    &lt;span style=&#34;color: #75715e&#34;&gt;# (b) those that start with WEBSERVER/ (as that&amp;#39;s where we are migrating&lt;/span&gt;
    &lt;span style=&#34;color: #75715e&#34;&gt;#     to).&lt;/span&gt;
    curl -s &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;localhost/v1/kv/?recurse&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; jq -r &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        .[] | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        select(&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;            (.Key | endswith(&amp;quot;/&amp;quot;) | not) and &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;            (.Key | startswith(&amp;quot;WEBSERVER&amp;quot;) | not)&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        ) | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        [.Key, &amp;quot; &amp;quot;, .Value] | &lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        add&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;read&lt;/span&gt; key b64value
    &lt;span style=&#34;color: #66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color: #75715e&#34;&gt;# Consul&amp;#39;s REST API returns values base64-encoded so we decode here.&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$key&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$b64value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64 -d&lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #75715e&#34;&gt;# Set a new value in Consul&amp;#39;s KV store&lt;/span&gt;
set_key&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$1&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$2&lt;/span&gt;
    curl -s -X PUT -d &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;localhost/v1/kv/&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &amp;gt; /dev/null
&lt;span style=&#34;color: #f92672&#34;&gt;}&lt;/span&gt;

migrate_to_webserver_namespace&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;{&lt;/span&gt;
    keys_and_values &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;read&lt;/span&gt; key value
    &lt;span style=&#34;color: #66d9ef&#34;&gt;do&lt;/span&gt;
        set_key &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;WEBSERVER/&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;done&lt;/span&gt; 
&lt;span style=&#34;color: #f92672&#34;&gt;}&lt;/span&gt;

migrate_to_webserver_namespace
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This script uses &lt;a href=&#34;https://www.consul.io/docs/agent/http/kv.html&#34;&gt;Consul&amp;rsquo;s REST API&lt;/a&gt; and filters the results using
&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. It&amp;rsquo;s easily
adapted to migrate key-value pairs between different namespaces.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;p&gt;I can never remember jq&amp;rsquo;s &lt;code&gt;select&lt;/code&gt; syntax so this post is intended largely
  as a personal reference on how to do this.&lt;/p&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Lies you&#39;re told on a software project</title>
      <link>http://codeinthehole.com/lists/lies/</link>
      <pubDate>Tue, 21 Mar 2017 11:54:01 +0000</pubDate>
      
      <guid>http://codeinthehole.com/lists/lies/</guid>
      <description>&lt;p&gt;In approximate chronological order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Sorry I missed stand-up this morning&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;I didn&amp;rsquo;t see that email&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;I&amp;rsquo;ll get back to you shortly&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Sounds easy - should only take a couple of days&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;It&amp;rsquo;s nearly finished&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;I didn&amp;rsquo;t have time to write tests&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;We&amp;rsquo;ll clean this up later&amp;rdquo;&lt;/em&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Lessons have been learnt&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Remember: &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Later equals never.&amp;quot; - Le Blanc&amp;#39;s law&lt;/p&gt;&amp;mdash; Programming Wisdom (@CodeWisdom) &lt;a href=&#34;https://twitter.com/CodeWisdom/status/843943743841583107&#34;&gt;March 20, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>http://codeinthehole.com/news/hugo/</link>
      <pubDate>Thu, 16 Mar 2017 10:30:02 +0000</pubDate>
      
      <guid>http://codeinthehole.com/news/hugo/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve migrated this site to &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; so I can host it on Github
pages&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Hugo is a fast and well thought-out static site generator, written in Golang.
It&amp;rsquo;s easy to learn and has some neat features&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; - the trickiest part is understanding the difference
between various ways pages are organised: &amp;ldquo;sections&amp;rdquo;, &amp;ldquo;types&amp;rdquo;, &amp;ldquo;taxonomies&amp;rdquo; etc.&lt;/p&gt;

&lt;p&gt;The Vim plugin &lt;a href=&#34;https://github.com/plasticboy/vim-markdown&#34;&gt;vim-markdown&lt;/a&gt;
provides good support for authoring Hugo posts since it supports
syntax-highlighting for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Github-style &amp;ldquo;fenced&amp;rdquo; code blocks and&lt;/li&gt;
&lt;li&gt;JSON or TOML front-matter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both things that Hugo supports.&lt;/p&gt;

&lt;p&gt;Downside: you have to use git submodules to keep the &lt;code&gt;public&lt;/code&gt; folder of
HTML files in a separate repo.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;p&gt;Which lets you do neat things like link to the revision history of an
  article &amp;ndash; see below.&lt;/p&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Like footnotes in markdown (thanks to the &lt;a href=&#34;https://github.com/russross/blackfriday#extensions&#34;&gt;blackfriday&lt;/a&gt; library).
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Django, ELB health checks and continuous delivery</title>
      <link>http://codeinthehole.com/news/oe-tech-elb-health-checks/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/news/oe-tech-elb-health-checks/</guid>
      <description>&lt;p&gt;I wrote an article
on &lt;a href=&#34;http://tech.octopus.energy/news/2016/05/05/django-elb-health-checks.html&#34;&gt;Django, ELB health checks and continuous delivery&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing for missing migrations in Django</title>
      <link>http://codeinthehole.com/news/oe-tech-missing-migrations/</link>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/news/oe-tech-missing-migrations/</guid>
      <description>&lt;p&gt;Octopus Energy has a &lt;a href=&#34;http://tech.octopus.energy&#34;&gt;tech blog&lt;/a&gt;. I wrote an article
on &lt;a href=&#34;http://tech.octopus.energy/news/2016/01/21/testing-for-missing-migrations-in-django.html&#34;&gt;Testing for missing migrations in Django&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Octopus Energy</title>
      <link>http://codeinthehole.com/news/octopus-energy/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/news/octopus-energy/</guid>
      <description>&lt;p&gt;Last Wednesday was my last day at Yoyo Wallet. Thursday marked my first
day at Octopus Energy.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m deeply excited about Octopus. Through innovative use of technology,
especially automation and cloud computing, Octopus Energy is going to
radically change how people consume and pay for energy in the UK. We&amp;rsquo;re
going to be both cheaper and massively better at customer service than
the much-maligned incumbents.&lt;/p&gt;

&lt;p&gt;Right now, &lt;a href=&#34;http://tech.octopus.energy/news/2015/11/23/tech-jobs.html&#34;&gt;we&amp;rsquo;re looking to build a superb tech team&lt;/a&gt;. Get in
touch if you&amp;rsquo;re looking for a challenge and would like to play a
formative part in a company that&amp;rsquo;s genuinely making the world a better
place, in helping transition the UK to a lower carbon future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A useful template for commit messages</title>
      <link>http://codeinthehole.com/tips/a-useful-template-for-commit-messages/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/tips/a-useful-template-for-commit-messages/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a useful heuristic for writing better commit messages. Set your
commit message template to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;# If applied, this commit will...

# Explain why this change is being made

# Provide links to any relevant tickets, articles or other resources
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and you&amp;rsquo;ll be guided into writing concise commit subjects in the
imperative mood - a good practice. See rule 5 of Chris Beam&amp;rsquo;s &lt;a href=&#34;http://chris.beams.io/posts/git-commit/&#34;&gt;&amp;ldquo;How to
write a commit message&amp;rdquo;&lt;/a&gt; for
the inspiration of this tip and more reasoning on the use of the
imperative mood.&lt;/p&gt;

&lt;p&gt;To do this in Git, save the above content in a file (eg
&lt;code&gt;~/.git_commit_msg.txt&lt;/code&gt;) and run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git config --global commit.template ~/.git_commit_msg.txt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here&amp;rsquo;s what this looks like in practice:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://codeinthehole.com/images/git-commit-snap.png&#34; width=&#34;800px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Try it - it&amp;rsquo;s genuinely useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Copying Postgres output into a spreadsheet</title>
      <link>http://codeinthehole.com/tips/copying-postgres-output-into-a-spreadsheet/</link>
      <pubDate>Wed, 02 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/tips/copying-postgres-output-into-a-spreadsheet/</guid>
      <description>&lt;p&gt;I often need to grab information from a Postgres database and paste it
into a spreadsheet for sharing with others. Google Sheets needs the
pasted data to be tab-separated in order to be correctly split into
columns. This isn&amp;rsquo;t the default behaviour for psql but here&amp;rsquo;s how to
configure psql&amp;rsquo;s output to get it.&lt;/p&gt;

&lt;p&gt;At a psql prompt, switch to unaligned output&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;=&amp;gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;\a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;set the field separator to a tab character:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;=&amp;gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;\f&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and turn the pager off:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;=&amp;gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;\pset&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;pager&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then the output from subsequent &lt;code&gt;SELECT ...&lt;/code&gt; statements can be cleanly
pasted into your Google Doc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An SSH tip for modern AWS patrons</title>
      <link>http://codeinthehole.com/tips/an-ssh-tip-for-modern-aws-patrons/</link>
      <pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/tips/an-ssh-tip-for-modern-aws-patrons/</guid>
      <description>

&lt;p&gt;Cloud computing and immutable infrastructure deployments have changed
the way I use SSH. I miss the days when I could run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ ssh app1-prod
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to jump onto a machine and investigate an issue. This would work as,
back in the days of yore, your web servers didn&amp;rsquo;t change IP address
several times a week so I could create a helpful alias in
&lt;code&gt;~/.ssh/config&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host app1-prod
    User example_user
    HostName 74.207.251.29
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This circumvented the labour-intensive act of typing in the remote
username and IP address when SSHing around town.&lt;/p&gt;

&lt;p&gt;I can no longer do this as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Immutable infrastructure deployments mean EC2 instances are replaced
for every update so the IP addresses keep changing. Life is too
short to keep updating &lt;code&gt;~/.ssh/config&lt;/code&gt; with their details.&lt;/li&gt;
&lt;li&gt;Plus, aside from your load balancers, servers should be unreachable
from the outside world. Now all access is via a bastion machine: the
only machine in the VPC that exposes its SSH port to the network
your laptop is using.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are both good things.&lt;/p&gt;

&lt;h3 id=&#34;aren-t-you-supposed-to-stop-using-ssh-with-aws&#34;&gt;Aren&amp;rsquo;t you supposed to stop using SSH with AWS?&lt;/h3&gt;

&lt;p&gt;Yeah, &lt;a href=&#34;https://wblinks.com/notes/aws-tips-i-wish-id-known-before-i-started/&#34;&gt;that&amp;rsquo;s been recommended
before&lt;/a&gt;
and seems a good idea.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not there yet though. There&amp;rsquo;s still occasions where I want to SSH
onto a machine and run diagnostics. For instance, as part of a &lt;a href=&#34;http://martinfowler.com/bliki/CanaryRelease.html&#34;&gt;canary
release&lt;/a&gt; I often SSH
onto one of the new machines and check for smoke before replacing the
entire auto-scale group with the new AMI. (I&amp;rsquo;m happy to accept this is
an regrettable practice and I need to raise my automation game.)&lt;/p&gt;

&lt;p&gt;In such circumstances, I want to be able to run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ ssh ip-10-5-8-179.eu-west-1.compute.internal
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;jumping straight onto an AWS EC2 instance using only its internal DNS
name, plucked from the AWS console or a &lt;code&gt;boto&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how.&lt;/p&gt;

&lt;h3 id=&#34;proxycommand-and-a-wildcard-ssh-alias&#34;&gt;ProxyCommand and a wildcard SSH alias&lt;/h3&gt;

&lt;p&gt;Add an alias to &lt;code&gt;~/.ssh/config&lt;/code&gt; for your bastion server. Something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host bastion-prod
    User example_user
    Hostname bastion.example.com
    IdentityFile ~/.ssh/bastion-prod.key
    LogLevel Quiet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then you can route SSH traffic through the bastion server using
&lt;code&gt;ProxyCommand&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host *.compute.internal
    User ubuntu
    IdentityFile ~/.ssh/aws-prod.key
    ProxyCommand ssh bastion-prod -W %h:%p
    StrictHostKeyChecking no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and that&amp;rsquo;s sufficient for commands like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ ssh ip-10-5-8-179.eu-west-1.compute.internal
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to work.&lt;/p&gt;

&lt;p&gt;Note, disabling &lt;code&gt;StrictHostKeyChecking&lt;/code&gt; suppresses the confirmation
prompt when connecting to a new host for the first time. I&amp;rsquo;m ignorant of
whether this is a dreadful security misstep.&lt;/p&gt;

&lt;p&gt;Some vaguely related articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://edgeofsanity.net/article/2012/10/15/ssh-leap-frog.html&#34;&gt;Using a ProxyCommand to Leap Frog Your
Bastions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://github.com/gianlucaborello/aws-ssh-config&#34;&gt;Github repo&lt;/a&gt;
for dynamically building &lt;code&gt;~/.ssh/config&lt;/code&gt; using boto.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ryanparman.com/2014/01/29/easily-ssh-into-amazon-ec2-instances-using-the-name-tag/&#34;&gt;Easily SSH into Amazon EC2 instances using the Name
tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>commandlinefu.com is in new hands</title>
      <link>http://codeinthehole.com/news/commandlinefucom-is-in-new-hands/</link>
      <pubDate>Sat, 04 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/news/commandlinefucom-is-in-new-hands/</guid>
      <description>&lt;p&gt;For the record, I no longer maintain
&lt;a href=&#34;http://www.commandlinefu.com/&#34;&gt;commandlinefu.com&lt;/a&gt;. I&amp;rsquo;ve handed over the
baton to notable Bay Area celebrity, Jon Hendren
(&lt;a href=&#34;https://twitter.com/fart&#34;&gt;@fart&lt;/a&gt;). This is a good thing for the site
and its users as I have been unable to do much maintenance in recent
times. I look forward to seeing how the site evolves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backing up Postgres database rows before deleting them</title>
      <link>http://codeinthehole.com/tips/backing-up-database-rows-in-postgres-before-deleting-them/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://codeinthehole.com/tips/backing-up-database-rows-in-postgres-before-deleting-them/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Hmmm, this delete statement is taking longer than I thought it
would&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you ever have to manually run a SQL delete statement in &lt;code&gt;psql&lt;/code&gt;, you
can back-up the rows you&amp;rsquo;re about to delete:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;copy&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;/tmp/backup.csv&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and, if you&amp;rsquo;ve got your filter clause wrong (we&amp;rsquo;ve all done it), restore
them with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;copy&lt;/span&gt; &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;/tmp/backup.csv&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Moderately useful.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>